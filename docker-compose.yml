services:
  db-expenses:
    image: postgres
    container_name: db-expenses
    restart: always
    volumes:
      - ./db/sql/schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./db/sql/data.sql:/docker-entrypoint-initdb.d/data.sql
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - put_net
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
  ExpenseTracker:
    build:
      dockerfile: Dockerfile
      context: ./
    image: openjdk17
    container_name: expenseTracker
    mem_limit: 512m
    environment:
      POSTGRES_DB: "jdbc:postgresql://db-expenses:5432/db_expenses"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      CURRENCY_API_KEY: ${CURRENCY_API_KEY}
      REDIS_HOST: redis://cache-db:6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MONGO_HOST: document-db
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB: ${MONGO_DB}
    networks:
      - put_net
    ports:
      - 8090:8080
    depends_on:
      db-expenses:
        condition: service_healthy
      cache-db:
        condition: service_started
      document-db:
        condition: service_started
  cache-db:
    image: redis:6.2-alpine
    container_name: expense_tracker_cache
    restart: always
    networks:
      - put_net
    ports:
      - 6379:6379
    command: redis-server --loglevel warning --requirepass ${REDIS_PASSWORD}
  document-db:
    image: mongo:6.0.4
    restart: always
    container_name: expense_tracker_users
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    networks:
      - put_net
    ports:
      - 27017:27017
    volumes:
      - ./db/mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
  #  sql-db:
  #    container_name: db-expense-tracker
  #    image: oscarfonts/h2:alpine
  #    restart: always
  #    volumes:
  #     - ./db/sql/:/opt/h2-data/
  #    ports:
  #      - 81:81
  #      - 1521:1521
  #    environment:
  #      H2_OPTIONS: -ifNotExists
networks:
  put_net:
    driver: bridge
    ipam:
      driver: default
      config:
        -
          subnet: 192.168.2.0/24